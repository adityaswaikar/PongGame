package game;

import java.awt.Graphics;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;


public class Ship extends Polygon implements KeyListener  {

	private boolean forward = false, left = false, right = false;
	private int step;


	public Ship(Point[] inShape, Point inPosition, double inRotation) {
		super(inShape, inPosition, inRotation);
		step = 5;
	}


	void paint(Graphics brush) {
		int[] xCoord = new int[this.getPoints().length];
		int[] yCoord = new int[this.getPoints().length];

		Point[] pray = this.getPoints();
		
		for(int i = 0; i < pray.length; i++){
			xCoord[i] = (int)pray[i].getX();
			yCoord[i] = (int)pray[i].getY();
		}


		brush.fillPolygon(xCoord, yCoord, 7);
	}


	public Point[] getShape() {
		return getShape();
	}

	public Point getPosition() {
		return position;
	}

	public double getRotation() {
		return rotation;
	}

	@Override
	public void keyTyped(KeyEvent e) {

	}
	@Override
	public void keyPressed(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_UP) {
			this.forward = true;
		}
		if (e.getKeyCode()== KeyEvent.VK_RIGHT) {
			this.right = true;
		}
		if (e.getKeyCode()== KeyEvent.VK_LEFT) {
			this.left = true;
		}
	}
	@Override
	public void keyReleased(KeyEvent e) {
		if (e.getKeyCode() == KeyEvent.VK_UP) {
			this.forward = false;
		}
		if(e.getKeyCode() == KeyEvent.VK_RIGHT) {
			this.right = false;
		}
		if(e.getKeyCode() == KeyEvent.VK_LEFT) {
			this.left = false;
		}
	}
	
	public void move() {
		if(forward) {
			double x = position.x + step * Math.cos(Math.toRadians(rotation));
			double y = position.y + step * Math.sin(Math.toRadians(rotation));
			
			if(x >= 0 && x <= 1000 && y >= 0 && y <= 900) {
				position.x = x;
				position.y = y;
			}	
		}
		
		
		if(right) {
			rotation += 5;
		}
		if(left) {
			rotation -= 5;
		}
		rotation %= 360;
	}
}

