package game;

import java.awt.Graphics;
import java.awt.event.KeyEvent;

public class Ship extends Polygon {

	private Point[] inShape;
	private Point inPosition;
	private double inRotation;

	private boolean moveUp, moveDown, moveRight, moveLeft, move = true;
	private static int step = 5;


	public Ship(Point[] inShape, Point inPosition, double inRotation) {
		super(inShape, inPosition, inRotation);

		this.inShape = getPoints();
		this.inPosition = inPosition;
		this.inRotation = inRotation;

	}


	void paint(Graphics brush) {
		int[] xCoord = new int[inShape.length];
		int[] yCoord = new int[inShape.length];


		for(int i = 0; i < this.inShape.length; i++){
			xCoord[i] = (int)this.inShape[i].getX();
			yCoord[i] = (int)this.inShape[i].getY();
		}


		brush.fillPolygon(xCoord, yCoord, 7);
	}

	public void move() {
		if(move) {
			for(Point p : inShape) {
				if(moveUp && p.y >= 0) {
					p.y -= step;
				} else if (moveDown && p.y <= 570) {
					p.y += step;
				} 
				else if (moveRight && p.x >=0) { 
					p.x+=step;
					
				}else if(moveLeft && p.x <= 800) {
					p.x -= step;
				}
					
				else {
					moveOnOff(false);
				}

			}
		}
	}

	public Point[] getShape() {
		return getShape();
	}

	public Point getPosition() {
		return inPosition;
	}

	public double getRotation() {
		return inRotation;
	}

	public void setMove(boolean up, boolean down, boolean right, boolean left) {
		moveUp = up;
		moveDown = down;
		moveRight = right; 
		moveLeft = left; 
	}

	public void moveOnOff(boolean b) {
		move = b;
	}
	


	
}
